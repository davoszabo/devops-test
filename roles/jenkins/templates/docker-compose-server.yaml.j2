services:
  jenkins:
    image: jenkins/jenkins:{{ jenkins.version }}
    container_name: {{ jenkins.container_name }}
    restart: unless-stopped
    user: "{{ getent_passwd[add_user].1 }}"
    group_add: 
      - "{{ getent_group["docker"].1 }}"
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_data:/var/jenkins_home
      - "{{ jenkins_mount_dir }}:/var/jenkins_home/workspace"
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - ci_network

{% if registry.enabled %}
  registry:
    image: registry:{{ registry.version }}
    container_name: {{ registry.container_name }}
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      - registry_data:/var/lib/registry
    environment:
      REGISTRY_HTTP_HEADERS_Access-Control-Allow-Origin: '["*"]'
      # REGISTRY_HTTP_HEADERS_Access-Control-Allow-Methods: '[HEAD,GET,OPTIONS,DELETE]'
      # REGISTRY_HTTP_HEADERS_Access-Control-Allow-Credentials: '[true]'
      # REGISTRY_HTTP_HEADERS_Access-Control-Allow-Headers: '[Authorization,Accept,Cache-Control]'
      # REGISTRY_HTTP_HEADERS_Access-Control-Expose-Headers: '[Docker-Content-Digest]'
    networks:
      - ci_network
{% endif %}

{% if registry.ui.enabled %}
  registry_ui:
    image: joxit/docker-registry-ui:{{ registry.ui.version }}
    container_name: {{ registry.ui.container_name }}
    restart: unless-stopped
    ports:
      - "8081:8081"
      - "81:80"
    environment:
      - REGISTRY_URL=http://{{ ansible_host }}:5000
      - DELETE_IMAGES=true
      - SINGLE_REGISTRY=true
      - REGISTRY_TITLE=Docker Registry UI
      - SHOW_CONTENT_DIGEST=true
      - SHOW_CATALOG_NB_TAGS=true
      - CATALOG_MIN_BRANCHES=1
      - CATALOG_MAX_BRANCHES=1
      - TAGLIST_PAGE_SIZE=100
      - REGISTRY_SECURED=false
      - CATALOG_ELEMENTS_LIMIT=1000
    networks:
      - ci_network
{% endif %}

volumes:
  jenkins_data:
{% if registry.enabled %}
  registry_data:
{% endif %}

networks:
  ci_network:

